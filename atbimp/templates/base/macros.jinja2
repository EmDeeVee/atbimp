{#
    Macro to use ANSI escape colors
#}
{%  macro color(colorName) -%}
{%  if colorName == 'blue' -%}
{{-     "\033[34m" -}}
{%- elif colorName == 'red' -%}
{{-     "\033[31m" -}}
{%- elif colorName == 'green' -%}
{{-     "\033[32m" -}}
{%- elif colorName == 'off' -%}
{{-     "\033[0m" -}}
{%- elif colorName == 'bright' -%}
{{-     "\033[1m" -}}
{%- elif colorName == 'gray' -%}
{{-     "\033[38;5;238m" -}}
{%- elif colorName == 'highlight1' -%}
{{-     "\033[1;38;5;1m\033[1;48;5;254m" -}}
{%- elif colorName == 'highlight2' -%}
{{-     "\033[1;48;5;226m" -}}
{%  endif -%}
{%- endmacro -%}
{# 
    Macro to display transaction entry.  The usage of colors and the boxbar
    is determined by the parameters 

#}
{% macro transaction_entry(entry, colors=True, boxBar=True, highlight=None, delta=False) -%}
{%  if colors -%}
{%   set clr = {
        "blue":         color('blue'),
        "red":          color('red'),
        "green":        color('green'),
        "off":          color('off'),
        "bright":       color('bright'),
        "gray":         color('gray'),
        "highlight1":   color('highlight1'),
        "highlight2":   color('highlight2'),
    } 
%}
{%- else -%}
{%     set clr = {"blue": "", "red": "", "green": "", "off": "", "bright": ""} -%}
{%  endif -%}
{% if boxBar -%}
{%    if colors -%}
{%        set bar=clr.bright + "┃" + clr.off -%}
{%-     else -%}
{%        set bar="┃" -%}
{%    endif -%}
{%- else -%}
{%    set bar=" " -%}
{% endif -%}
{% if entry.id == highlight|int -%}
{%    set ch = color('highlight1') -%}
{% endif -%}
{# entry.flag <str> Can be None due to the return of sqlite, wich will chocke the format filter -#}
{% if entry.flag is not none -%}{{clr.red + "{:1s}".format(entry.flag) + clr.off -}}{% else -%}{{ " "}}{% endif -%}
{# Now display one one of data -#}
{{bar}}{{ch}}{{entry.date}}{{bar}}{{"%-15s"|format(entry.transaction_type)}}{{bar}}{{"%-64s"|format(entry.description[:64])-}}
{{bar}}{% if entry.dc == "C" %}{{ clr.green + "{:12,.2f}".format(entry.amount) + clr.off }}{{ch}}{% else %}            {% endif -%}
{{bar}}{% if entry.dc == "D" %}{{ clr.red + "{:12,.2f}".format(entry.amount) + clr.off }}{{ch}}{% else %}            {% endif -%}
{{bar}}{{ clr.blue + "{:12,.2f}".format(entry.balance) + clr.off }}{{ch}}{{bar}}{{clr.off -}}
{# Display delta if any -#}
{% if delta and (entry.delta|float >= 0.01 or entry.delta|float <= -0.01 )  -%}
{%   if entry.delta < 0 -%}
{{ clr.red  + "{:12,.2f}".format(entry.delta) + clr.off -}}
{%   else -%}
{{ clr.green + "{:+12,.2f}".format(entry.delta) + clr.off -}}
{%   endif -%}
{% endif %}
{%- endmacro %}
{# 
    Macro to display duplicate entry
#}
{% macro duplicate_entry(row, highlight=None) %}
{# first the source entry#}
{{ color('green')+color('bright') }}[{{row.entry.id}}]: →  → {{row.entry.date}} {{"%-15s"|format(row.entry.transaction_type)}} {{"%-45s"|format(row.entry.description[:45])}} {{"%8.2f"|format(row.entry.amount)}}:{{row.entry.dc}} {{"%8.2f"|format(row.entry.balance)}}:B{{ color('off') }}
 {{color('gray')}}▫︎ Entry on account: {{row.entry.acct_number}}({{row.entry.alias}}) with nickname: {{row.entry.nick_name}}
 ▫︎ imported on: {{row.entry.import_time}} from line({{row.entry.import_line}}) of {{ row.entry.import_source }}{{ color('off') -}}
{% for entry in row.duplicates %}
{%   set ch = '' -%}
{%   if entry.id == highlight|int -%}
{%      set ch = color('highlight2') -%}
{%   endif -%}
 {{ch}}{{color('red')}}↳ ({{entry.id}}): → {{entry.date}} {{"%-15s"|format(entry.transaction_type)}} {{"%-45s"|format(entry.description[:45])}} {{"%8.2f"|format(entry.amount)}}:{{entry.dc}} {{"%8.2f"|format(entry.balance)}}:B{{color('off')}}
  {{ color('gray') }}▫︎ Duplicate on account {{entry.acct_number}}({{entry.alias}}) with nickname: {{entry.nick_name}}
  ▫︎ imported on {{entry.import_time}} from line({{entry.import_line}}) of {{entry.import_source }}{{ color('off') -}}
{% endfor %}
{%- endmacro  %}
{# 
    Macro Report
#}
{% macro import_report(report) %}
File checked:                   {{ report.fileChecked }}
Exported to:                    {{ report.fileExported }}
Lines found in file:            {{ report.linesRead }}
Data lines in file:             {{ report.dataLinesFound }}

----------------------- Errors found ---------------------------
Incorrect date format:          {{ report.incorrectDate }}
Leading quote:                  {{ report.leadingQuote }}
Trailing comma:                 {{ report.trailingComma }}
Single Quote in text:           {{ report.singleQuote }}

Total Errors Found:             {{ report.totalErrors }}

----------------------- Import Stats --------------------------
Records imported:               {{ report.recordsImported }}
Records exported:               {{ report.recordsExported }}
SQL Import Errors:              {{ report.sqlInsertErrors }}
Duplicates Found:               {{ report.duplicatesFound }}
{% endmacro %}